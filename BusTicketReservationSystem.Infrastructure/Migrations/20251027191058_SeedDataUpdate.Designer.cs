// <auto-generated />
using System;
using BusTicketReservationSystem.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BusTicketReservationSystem.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251027191058_SeedDataUpdate")]
    partial class SeedDataUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BoardingDropping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PointName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("BoardingDroppings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaa0001-1111-2222-3333-abcdef000001"),
                            CityName = "Dhaka",
                            PointName = "Uttara",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("aaaa0002-1111-2222-3333-abcdef000002"),
                            CityName = "Dhaka",
                            PointName = "Mirpur-10",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("aaaa0003-1111-2222-3333-abcdef000003"),
                            CityName = "Dhaka",
                            PointName = "Mohakhali",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("aaaa0004-1111-2222-3333-abcdef000004"),
                            CityName = "Dhaka",
                            PointName = "Kakrail",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("aaaa0005-1111-2222-3333-abcdef000005"),
                            CityName = "Dhaka",
                            PointName = "Gabtoli",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("aaaa0006-1111-2222-3333-abcdef000006"),
                            CityName = "Dhaka",
                            PointName = "Kallyanpur",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("aaaa0007-1111-2222-3333-abcdef000007"),
                            CityName = "Dhaka",
                            PointName = "Abdullahpur",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("aaaa0008-1111-2222-3333-abcdef000008"),
                            CityName = "Dhaka",
                            PointName = "Syedabad",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("aaaa0009-1111-2222-3333-abcdef000009"),
                            CityName = "Dhaka",
                            PointName = "Arambagh",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("bbbb0001-1111-2222-3333-abcdef000001"),
                            CityName = "Cox's Bazar",
                            PointName = "Dolphin Mor",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("bbbb0002-1111-2222-3333-abcdef000002"),
                            CityName = "Cox's Bazar",
                            PointName = "Kolatoli",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("bbbb0003-1111-2222-3333-abcdef000003"),
                            CityName = "Cox's Bazar",
                            PointName = "Laboni Beach",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("bbbb0004-1111-2222-3333-abcdef000004"),
                            CityName = "Cox's Bazar",
                            PointName = "Sugandha Beach",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("bbbb0005-1111-2222-3333-abcdef000005"),
                            CityName = "Cox's Bazar",
                            PointName = "Inani",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("cccc0001-1111-2222-3333-abcdef000001"),
                            CityName = "Sylhet",
                            PointName = "Ambarkhana",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("cccc0002-1111-2222-3333-abcdef000002"),
                            CityName = "Sylhet",
                            PointName = "Shibgonj",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("cccc0003-1111-2222-3333-abcdef000003"),
                            CityName = "Sylhet",
                            PointName = "Zindabazar",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("cccc0004-1111-2222-3333-abcdef000004"),
                            CityName = "Sylhet",
                            PointName = "Mirabazar",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("cccc0005-1111-2222-3333-abcdef000005"),
                            CityName = "Sylhet",
                            PointName = "Kamalbazar",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("dddd0001-1111-2222-3333-abcdef000001"),
                            CityName = "Khulna",
                            PointName = "Khalishpur",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("dddd0002-1111-2222-3333-abcdef000002"),
                            CityName = "Khulna",
                            PointName = "Sonadanga",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("dddd0003-1111-2222-3333-abcdef000003"),
                            CityName = "Khulna",
                            PointName = "Daulatpur",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("dddd0004-1111-2222-3333-abcdef000004"),
                            CityName = "Khulna",
                            PointName = "Teligati",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("dddd0005-1111-2222-3333-abcdef000005"),
                            CityName = "Khulna",
                            PointName = "Khan Jahan Ali",
                            Type = 2
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Bus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CompanyName = "Shyamoli",
                            Name = "Shyamoli NR",
                            TotalSeats = 40
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CompanyName = "Ena",
                            Name = "Ena Transport",
                            TotalSeats = 40
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CompanyName = "GreenLine",
                            Name = "Super Fast",
                            TotalSeats = 40
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            CompanyName = "Shyamoli",
                            Name = "Comfort Line",
                            TotalSeats = 40
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            CompanyName = "Hanif",
                            Name = "Luxury Line",
                            TotalSeats = 40
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            CompanyName = "DeshLine",
                            Name = "Rapid Class",
                            TotalSeats = 40
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            CompanyName = "Soudia",
                            Name = "Night Rider",
                            TotalSeats = 40
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            CompanyName = "GreenLine",
                            Name = "Morning Express",
                            TotalSeats = 40
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            CompanyName = "Shohag",
                            Name = "SilkRoute",
                            TotalSeats = 40
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CompanyName = "Hanif",
                            Name = "CityLink",
                            TotalSeats = 40
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BusSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("BusId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("JourneyDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("RouteId");

                    b.ToTable("BusSchedules");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1211-1111-1111-111111111111"),
                            ArrivalTime = new DateTime(2025, 10, 25, 12, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("11111111-1111-1111-1111-111111111111"),
                            DepartureTime = new DateTime(2025, 10, 25, 6, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1700m,
                            RouteId = new Guid("12121212-1212-1212-1212-121212121212")
                        },
                        new
                        {
                            Id = new Guid("11111111-1311-1111-1111-111111111111"),
                            ArrivalTime = new DateTime(2025, 10, 25, 14, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("22222222-2222-2222-2222-222222222222"),
                            DepartureTime = new DateTime(2025, 10, 25, 8, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 950m,
                            RouteId = new Guid("12121212-1212-1212-1212-121212121212")
                        },
                        new
                        {
                            Id = new Guid("11111111-1411-1111-1111-111111111111"),
                            ArrivalTime = new DateTime(2025, 10, 25, 16, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("33333333-3333-3333-3333-333333333333"),
                            DepartureTime = new DateTime(2025, 10, 25, 10, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1100m,
                            RouteId = new Guid("12121212-1212-1212-1212-121212121212")
                        },
                        new
                        {
                            Id = new Guid("11111111-1211-2111-1111-111111111111"),
                            ArrivalTime = new DateTime(2025, 10, 25, 12, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("11111111-1111-1111-1111-111111111111"),
                            DepartureTime = new DateTime(2025, 10, 25, 6, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1700m,
                            RouteId = new Guid("12121212-1212-1212-1212-121212121212")
                        },
                        new
                        {
                            Id = new Guid("11111111-1411-2111-1111-111111111111"),
                            ArrivalTime = new DateTime(2025, 10, 25, 16, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("33333333-3333-3333-3333-333333333333"),
                            DepartureTime = new DateTime(2025, 10, 25, 10, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1100m,
                            RouteId = new Guid("12121212-1212-1212-1212-121212121212")
                        },
                        new
                        {
                            Id = new Guid("11111111-1511-1111-1111-111111111111"),
                            ArrivalTime = new DateTime(2025, 10, 26, 13, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("44444444-4444-4444-4444-444444444444"),
                            DepartureTime = new DateTime(2025, 10, 26, 7, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 750m,
                            RouteId = new Guid("15151515-1515-1515-1515-151515151515")
                        },
                        new
                        {
                            Id = new Guid("11111111-1611-1111-1111-111111111111"),
                            ArrivalTime = new DateTime(2025, 10, 26, 17, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("66666666-6666-6666-6666-666666666666"),
                            DepartureTime = new DateTime(2025, 10, 26, 11, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 950m,
                            RouteId = new Guid("15151515-1515-1515-1515-151515151515")
                        },
                        new
                        {
                            Id = new Guid("11111111-1711-1111-1111-111111111111"),
                            ArrivalTime = new DateTime(2025, 10, 27, 12, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("77777777-7777-7777-7777-777777777777"),
                            DepartureTime = new DateTime(2025, 10, 27, 6, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1700m,
                            RouteId = new Guid("13131313-1313-1313-1313-131313131313")
                        },
                        new
                        {
                            Id = new Guid("11111111-1811-1111-1111-111111111111"),
                            ArrivalTime = new DateTime(2025, 10, 27, 14, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("88888888-8888-8888-8888-888888888888"),
                            DepartureTime = new DateTime(2025, 10, 27, 8, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 950m,
                            RouteId = new Guid("13131313-1313-1313-1313-131313131313")
                        },
                        new
                        {
                            Id = new Guid("11111111-1911-1111-1111-111111111111"),
                            ArrivalTime = new DateTime(2025, 10, 27, 16, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("99999999-9999-9999-9999-999999999999"),
                            DepartureTime = new DateTime(2025, 10, 27, 10, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1100m,
                            RouteId = new Guid("13131313-1313-1313-1313-131313131313")
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("DistanceKm")
                        .HasColumnType("double precision");

                    b.Property<string>("FromCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ToCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12121212-1212-1212-1212-121212121212"),
                            DistanceKm = 400.0,
                            FromCity = "Dhaka",
                            ToCity = "Cox's Bazar"
                        },
                        new
                        {
                            Id = new Guid("15151515-1515-1515-1515-151515151515"),
                            DistanceKm = 240.0,
                            FromCity = "Dhaka",
                            ToCity = "Sylhet"
                        },
                        new
                        {
                            Id = new Guid("13131313-1313-1313-1313-131313131313"),
                            DistanceKm = 400.0,
                            FromCity = "Cox's Bazar",
                            ToCity = "Dhaka"
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BoardingPoint")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("BusScheduleId")
                        .HasColumnType("uuid");

                    b.Property<string>("DroppingPoint")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uuid");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BusScheduleId");

                    b.HasIndex("PassengerId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BusSchedule", b =>
                {
                    b.HasOne("BusTicketReservationSystem.Domain.Entities.Bus", "Bus")
                        .WithMany("Schedules")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketReservationSystem.Domain.Entities.Route", "Route")
                        .WithMany("Schedules")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Ticket", b =>
                {
                    b.HasOne("BusTicketReservationSystem.Domain.Entities.BusSchedule", "BusSchedule")
                        .WithMany("Tickets")
                        .HasForeignKey("BusScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketReservationSystem.Domain.Entities.Passenger", "Passenger")
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusSchedule");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Bus", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BusSchedule", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Passenger", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Route", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
