// <auto-generated />
using System;
using BusTicketReservationSystem.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BusTicketReservationSystem.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251021112144_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Bus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CompanyName = "BanglaBus",
                            Name = "Express A1",
                            TotalSeats = 40
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CompanyName = "CityLine",
                            Name = "Express B2",
                            TotalSeats = 35
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CompanyName = "GreenLine",
                            Name = "Super Fast C3",
                            TotalSeats = 45
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            CompanyName = "Shyamoli",
                            Name = "Comfort D4",
                            TotalSeats = 30
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            CompanyName = "Hanif",
                            Name = "Luxury E5",
                            TotalSeats = 50
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            CompanyName = "DeshLine",
                            Name = "Rapid F6",
                            TotalSeats = 40
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            CompanyName = "Soudia",
                            Name = "Night Rider G7",
                            TotalSeats = 38
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            CompanyName = "GreenLine",
                            Name = "Morning Express H8",
                            TotalSeats = 42
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            CompanyName = "Shohag",
                            Name = "SilkRoute I9",
                            TotalSeats = 36
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CompanyName = "Hanif",
                            Name = "CityLink J10",
                            TotalSeats = 48
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BusSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("BusId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("JourneyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("RouteId");

                    b.ToTable("BusSchedules");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-1111-aaaa-1111-aaaaaaaaaaaa"),
                            ArrivalTime = new DateTime(2025, 10, 21, 12, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("11111111-1111-1111-1111-111111111111"),
                            DepartureTime = new DateTime(2025, 10, 21, 6, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Price = 1200m,
                            RouteId = new Guid("40404040-4040-4040-4040-404040404040")
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-2222-bbbb-2222-bbbbbbbbbbbb"),
                            ArrivalTime = new DateTime(2025, 10, 21, 13, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("22222222-2222-2222-2222-222222222222"),
                            DepartureTime = new DateTime(2025, 10, 21, 7, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Price = 1300m,
                            RouteId = new Guid("20202020-2020-2020-2020-202020202020")
                        },
                        new
                        {
                            Id = new Guid("cccccccc-3333-cccc-3333-cccccccccccc"),
                            ArrivalTime = new DateTime(2025, 10, 21, 14, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("33333333-3333-3333-3333-333333333333"),
                            DepartureTime = new DateTime(2025, 10, 21, 8, 0, 0, 0, DateTimeKind.Utc),
                            JourneyDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Price = 1400m,
                            RouteId = new Guid("30303030-3030-3030-3030-303030303030")
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("DistanceKm")
                        .HasColumnType("double precision");

                    b.Property<string>("FromCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ToCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10101010-1010-1010-1010-101010101010"),
                            DistanceKm = 250.0,
                            FromCity = "Dhaka",
                            ToCity = "Chittagong"
                        },
                        new
                        {
                            Id = new Guid("20202020-2020-2020-2020-202020202020"),
                            DistanceKm = 240.0,
                            FromCity = "Dhaka",
                            ToCity = "Sylhet"
                        },
                        new
                        {
                            Id = new Guid("30303030-3030-3030-3030-303030303030"),
                            DistanceKm = 270.0,
                            FromCity = "Dhaka",
                            ToCity = "Rajshahi"
                        },
                        new
                        {
                            Id = new Guid("40404040-4040-4040-4040-404040404040"),
                            DistanceKm = 220.0,
                            FromCity = "Dhaka",
                            ToCity = "Khulna"
                        },
                        new
                        {
                            Id = new Guid("50505050-5050-5050-5050-505050505050"),
                            DistanceKm = 200.0,
                            FromCity = "Dhaka",
                            ToCity = "Barishal"
                        },
                        new
                        {
                            Id = new Guid("60606060-6060-6060-6060-606060606060"),
                            DistanceKm = 120.0,
                            FromCity = "Dhaka",
                            ToCity = "Mymensingh"
                        },
                        new
                        {
                            Id = new Guid("70707070-7070-7070-7070-707070707070"),
                            DistanceKm = 130.0,
                            FromCity = "Dhaka",
                            ToCity = "Comilla"
                        },
                        new
                        {
                            Id = new Guid("80808080-8080-8080-8080-808080808080"),
                            DistanceKm = 90.0,
                            FromCity = "Dhaka",
                            ToCity = "Narsingdi"
                        },
                        new
                        {
                            Id = new Guid("90909090-9090-9090-9090-909090909090"),
                            DistanceKm = 50.0,
                            FromCity = "Dhaka",
                            ToCity = "Gazipur"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111011"),
                            DistanceKm = 115.0,
                            FromCity = "Dhaka",
                            ToCity = "Tangail"
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BusScheduleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uuid");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BusScheduleId");

                    b.HasIndex("PassengerId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BusSchedule", b =>
                {
                    b.HasOne("BusTicketReservationSystem.Domain.Entities.Bus", "Bus")
                        .WithMany("Schedules")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketReservationSystem.Domain.Entities.Route", "Route")
                        .WithMany("Schedules")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Ticket", b =>
                {
                    b.HasOne("BusTicketReservationSystem.Domain.Entities.BusSchedule", "BusSchedule")
                        .WithMany("Tickets")
                        .HasForeignKey("BusScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketReservationSystem.Domain.Entities.Passenger", "Passenger")
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusSchedule");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Bus", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BusSchedule", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Passenger", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Route", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
